{"version":3,"file":"static/js/2.5b51dcc8.chunk.js","mappings":"iTAEaA,E,MAAWC,GAAAA,OAAa,CACnCC,IAAK,GACLC,QAAS,+BAETC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WCNDC,EAAgB,mCAAG,+GAIlBP,EAAS,oBAAqB,IAJZ,uBAGlBQ,EAHkB,EAG1BC,KAAQD,QAHkB,kBAMrBA,GANqB,sCAQtBE,OAAOC,MAAM,+BARS,yDAAH,qDAYhBC,EAAQ,mCAAG,WAAMC,GAAN,kGAIVb,EAAS,gBAAiB,CAClCI,OAAQ,CAAEU,MAAOD,KALC,uBAGVL,EAHU,EAGlBC,KAAQD,QAHU,kBAQbA,GARa,sCAUdE,OAAOC,MAAM,kDAVC,yDAAH,sDAcRI,EAAY,mCAAG,WAAMC,GAAN,kGAEDhB,EAAS,SAAD,OAAUgB,GAAM,IAFvB,uBAEhBP,EAFgB,EAEhBA,KAFgB,kBAGjBA,GAHiB,sCAKlBC,OAAOC,MAAM,4CALK,yDAAH,sDASZM,EAAW,mCAAG,WAAMD,GAAN,kGAEAhB,EAAS,SAAD,OAAUgB,EAAV,YAAwB,IAFhC,uBAEfP,EAFe,EAEfA,KAFe,kBAGhBA,GAHgB,sCAKjBC,OAAOC,MAAM,wCALI,yDAAH,sDASXO,EAAc,mCAAG,WAAMF,GAAN,kGAEHhB,EAAS,SAAD,OAAUgB,EAAV,YAAwB,IAF7B,uBAElBP,EAFkB,EAElBA,KAFkB,kBAGnBA,GAHmB,sCAKpBC,OAAOC,MAAM,uBALO,yDAAH,uD,mJC1CZ,SAASQ,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBR,EAAAA,EAAAA,IAAYG,GAFnC,OAEUX,EAFV,OAIIe,EAAQf,EAAKc,MAJjB,gDAMIG,QAAQC,IAAR,MANJ,0DADc,uBAAC,WAAD,wBAWdC,KACC,CAACR,KAGF,iCACE,iCAECG,IACC,wBACGA,EAAKM,KAAI,YAA4C,IAAzCb,EAAwC,EAAxCA,GAAIc,EAAoC,EAApCA,UAAWjB,EAAyB,EAAzBA,KAAMkB,EAAmB,EAAnBA,aAChC,OACE,2BACE,gBACEC,IAAG,6CAAwCD,GAC3CE,IAAI,QACJC,MAAO,OAET,uBAAIrB,KACJ,uCAAeiB,OAPRd,QAaA,IAAhBO,EAAKY,SAAgB","sources":["services/settings.js","services/API.js","views/Cast/CastView.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const axiosGet = axios.create({\n  url: '',\n  baseURL: 'https://api.themoviedb.org/3',\n\n  params: {\n    api_key: '8aee03cb2478db5e76cfede337c072a1',\n    language: 'en-US',\n  },\n});\n","import { axiosGet } from './settings';\n\nexport const getTrendingMovie = async () => {\n  try {\n    const {\n      data: { results },\n    } = await axiosGet('/trending/all/day', {});\n\n    return results;\n  } catch (error) {\n    throw Object.error('There is no tranding movies');\n  }\n};\n\nexport const getMovie = async name => {\n  try {\n    const {\n      data: { results },\n    } = await axiosGet('/search/movie', {\n      params: { query: name },\n    });\n\n    return results;\n  } catch (error) {\n    throw Object.error('There is no information about the movie yet...');\n  }\n};\n\nexport const getMovieInfo = async id => {\n  try {\n    const { data } = await axiosGet(`movie/${id}`, {});\n    return data;\n  } catch (error) {\n    throw Object.error('There is no information about this movie');\n  }\n};\n\nexport const getCastInfo = async id => {\n  try {\n    const { data } = await axiosGet(`movie/${id}/credits`, {});\n    return data;\n  } catch (error) {\n    throw Object.error('There is no information about actors');\n  }\n};\n\nexport const getReviewsInfo = async id => {\n  try {\n    const { data } = await axiosGet(`movie/${id}/reviews`, {});\n    return data;\n  } catch (error) {\n    throw Object.error('There is no reviews');\n  }\n};\n","import { getCastInfo } from '../../services/API';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport default function CastInfo() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    async function getCast() {\n      try {\n        const data = await getCastInfo(movieId);\n\n        setCast(data.cast);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    getCast();\n  }, [movieId]);\n\n  return (\n    <>\n      <h3>Cast</h3>\n\n      {cast && (\n        <ul>\n          {cast.map(({ id, character, name, profile_path }) => {\n            return (\n              <li key={id}>\n                <img\n                  src={`https://image.tmdb.org/t/p/original${profile_path}`}\n                  alt=\"actor\"\n                  width={120}\n                />\n                <p>{name}</p>\n                <p>Character: {character}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n      {cast.length === 0 && <h2>There is no information about movie cast</h2>}\n    </>\n  );\n}\n"],"names":["axiosGet","axios","url","baseURL","params","api_key","language","getTrendingMovie","results","data","Object","error","getMovie","name","query","getMovieInfo","id","getCastInfo","getReviewsInfo","CastInfo","movieId","useParams","useState","cast","setCast","useEffect","console","log","getCast","map","character","profile_path","src","alt","width","length"],"sourceRoot":""}