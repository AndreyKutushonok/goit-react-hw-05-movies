{"version":3,"file":"static/js/631.5a9fc1fa.chunk.js","mappings":"mTAEaA,E,MAAWC,GAAAA,OAAa,CACnCC,IAAK,GACLC,QAAS,+BAETC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WCNDC,EAAgB,mCAAG,+GAIlBP,EAAS,oBAAqB,IAJZ,uBAGlBQ,EAHkB,EAG1BC,KAAQD,QAHkB,kBAMrBA,GANqB,yDAQrBE,QAAQC,OAAO,gCARM,yDAAH,qDAYhBC,EAAQ,mCAAG,WAAMC,GAAN,kGAIVb,EAAS,gBAAiB,CAClCI,OAAQ,CAAEU,MAAOD,KALC,uBAGVL,EAHU,EAGlBC,KAAQD,QAHU,kBAQbA,GARa,yDAUbE,QAAQC,OAAO,mDAVF,yDAAH,sDAcRI,EAAY,mCAAG,WAAMC,GAAN,kGAEDhB,EAAS,SAAD,OAAUgB,GAAM,IAFvB,uBAEhBP,EAFgB,EAEhBA,KAFgB,kBAGjBA,GAHiB,yDAKjBC,QAAQC,OAAO,6CALE,yDAAH,sDASZM,EAAW,mCAAG,WAAMD,GAAN,kGAEAhB,EAAS,SAAD,OAAUgB,EAAV,YAAwB,IAFhC,uBAEfP,EAFe,EAEfA,KAFe,kBAGhBA,GAHgB,yDAKhBC,QAAQC,OAAO,yCALC,yDAAH,sDASXO,EAAc,mCAAG,WAAMF,GAAN,kGAEHhB,EAAS,SAAD,OAAUgB,EAAV,YAAwB,IAF7B,uBAElBP,EAFkB,EAElBA,KAFkB,kBAGnBA,GAHmB,yDAKnBC,QAAQC,OAAO,wBALI,yDAAH,uD,mJC1CZ,SAASQ,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBP,EAAAA,EAAAA,IAAeE,GAFtC,OAEUX,EAFV,OAIIe,EAAWf,EAAKD,SAJpB,gDAMIkB,QAAQC,IAAR,MANJ,0DADc,uBAAC,WAAD,wBAWdC,KACC,CAACR,KAGF,iCACE,oCACCG,IACC,wBACGA,EAAQM,KAAI,YAA8B,IAA3Bb,EAA0B,EAA1BA,GAAIc,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,2BACE,qCAAaD,MACb,uBAAIC,MAFGf,SAQfO,IAAW","sources":["services/settings.js","services/API.js","views/Reviews/ReviewsView.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const axiosGet = axios.create({\n  url: '',\n  baseURL: 'https://api.themoviedb.org/3',\n\n  params: {\n    api_key: '8aee03cb2478db5e76cfede337c072a1',\n    language: 'en-US',\n  },\n});\n","import { axiosGet } from './settings';\n\nexport const getTrendingMovie = async () => {\n  try {\n    const {\n      data: { results },\n    } = await axiosGet('/trending/all/day', {});\n\n    return results;\n  } catch (error) {\n    return Promise.reject('There is no tranding movies');\n  }\n};\n\nexport const getMovie = async name => {\n  try {\n    const {\n      data: { results },\n    } = await axiosGet('/search/movie', {\n      params: { query: name },\n    });\n\n    return results;\n  } catch (error) {\n    return Promise.reject('There is no information about the movie yet...');\n  }\n};\n\nexport const getMovieInfo = async id => {\n  try {\n    const { data } = await axiosGet(`movie/${id}`, {});\n    return data;\n  } catch (error) {\n    return Promise.reject('There is no information about this movie');\n  }\n};\n\nexport const getCastInfo = async id => {\n  try {\n    const { data } = await axiosGet(`movie/${id}/credits`, {});\n    return data;\n  } catch (error) {\n    return Promise.reject('There is no information about actors');\n  }\n};\n\nexport const getReviewsInfo = async id => {\n  try {\n    const { data } = await axiosGet(`movie/${id}/reviews`, {});\n    return data;\n  } catch (error) {\n    return Promise.reject('There is no reviews');\n  }\n};\n","import { getReviewsInfo } from '../../services/API';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport default function ReviewsInfo() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    async function getReviews() {\n      try {\n        const data = await getReviewsInfo(movieId);\n\n        setReviews(data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    getReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      <h3>Reviews</h3>\n      {reviews && (\n        <ul>\n          {reviews.map(({ id, author, content }) => {\n            return (\n              <li key={id}>\n                <h3>Author: {author}</h3>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n      {!reviews && <h2>There is no reviews</h2>}\n    </>\n  );\n}\n"],"names":["axiosGet","axios","url","baseURL","params","api_key","language","getTrendingMovie","results","data","Promise","reject","getMovie","name","query","getMovieInfo","id","getCastInfo","getReviewsInfo","ReviewsInfo","movieId","useParams","useState","reviews","setReviews","useEffect","console","log","getReviews","map","author","content"],"sourceRoot":""}